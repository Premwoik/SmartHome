var _user$project$Data_Action$Action = F6(
	function (a, b, c, d, e, f) {
		return {id: a, name: b, state: c, $function: d, order: e, action_: f};
	});
var _user$project$Data_Action$decoder = A7(
	_elm_lang$core$Json_Decode$map6,
	_user$project$Data_Action$Action,
	A2(_elm_lang$core$Json_Decode$field, 'id', _user$project$Data_Id$decoder),
	A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'state', _elm_lang$core$Json_Decode$bool),
	A2(_elm_lang$core$Json_Decode$field, 'function', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'order', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'action', _elm_lang$core$Json_Decode$string));
var _user$project$Data_Action$setOn = function (a) {
	var data = _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'id',
				_1: _elm_lang$core$Json_Encode$int(
					_user$project$Data_Id$toInt(a.id))
			},
			_1: {ctor: '[]'}
		});
	var url_ = A2(_elm_lang$core$Basics_ops['++'], _user$project$Request$url, 'actions/setOn');
	return A3(
		_elm_lang$http$Http$post,
		url_,
		_elm_lang$http$Http$jsonBody(data),
		_user$project$Data_Action$decoder);
};
var _user$project$Data_Action$setOff = function (a) {
	var data = _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'id',
				_1: _elm_lang$core$Json_Encode$int(
					_user$project$Data_Id$toInt(a.id))
			},
			_1: {ctor: '[]'}
		});
	var url_ = A2(_elm_lang$core$Basics_ops['++'], _user$project$Request$url, 'actions/setOff');
	return A3(
		_elm_lang$http$Http$post,
		url_,
		_elm_lang$http$Http$jsonBody(data),
		_user$project$Data_Action$decoder);
};
var _user$project$Data_Action$toggle = function (a) {
	return a.state ? _user$project$Data_Action$setOff(a) : _user$project$Data_Action$setOn(a);
};
