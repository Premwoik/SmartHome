var _user$project$Main$makeDimList = function (model) {
	return A2(
		_elm_lang$core$List$map,
		function (x) {
			return A4(
				_user$project$Views_DimmerC$dimmerCard,
				model.mdl,
				x,
				_user$project$Data_Dimmer$getId(x),
				model.raised);
		},
		model.dimmers);
};
var _user$project$Main$makeSunblind = function (model) {
	return A5(_user$project$Views_SunblindC$sunblindCard, model.mdl, model.sunblinds, -2, model.raised, model.blindUndrawn);
};
var _user$project$Main$viewContent = function (model) {
	return A2(
		_debois$elm_mdl$Material_Options$div,
		{
			ctor: '::',
			_0: A2(_debois$elm_mdl$Material_Options$css, 'display', 'flex'),
			_1: {
				ctor: '::',
				_0: A2(_debois$elm_mdl$Material_Options$css, 'flex-flow', 'row wrap'),
				_1: {
					ctor: '::',
					_0: A2(_debois$elm_mdl$Material_Options$css, 'align-items', 'flex-start'),
					_1: {
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '95%'),
						_1: {
							ctor: '::',
							_0: A2(_debois$elm_mdl$Material_Options$css, 'margin', '1rem'),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{
			ctor: '::',
			_0: _user$project$Main$makeSunblind(model),
			_1: _user$project$Main$makeDimList(model)
		});
};
var _user$project$Main$header = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$h5,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'padding-left', _1: '40px'},
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('easyHome'),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$Main$view = function (model) {
	return A3(
		_debois$elm_mdl$Material_Scheme$topWithScheme,
		_debois$elm_mdl$Material_Color$Cyan,
		_debois$elm_mdl$Material_Color$Lime,
		A4(
			_debois$elm_mdl$Material_Layout$render,
			_user$project$Model$Mdl,
			model.mdl,
			{
				ctor: '::',
				_0: _debois$elm_mdl$Material_Layout$fixedHeader,
				_1: {ctor: '[]'}
			},
			{
				header: {
					ctor: '::',
					_0: _user$project$Main$header,
					_1: {ctor: '[]'}
				},
				drawer: {ctor: '[]'},
				tabs: {
					ctor: '_Tuple2',
					_0: {ctor: '[]'},
					_1: {ctor: '[]'}
				},
				main: {
					ctor: '::',
					_0: _user$project$Main$viewContent(model),
					_1: {ctor: '[]'}
				}
			}));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'InitSunblinds':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{sunblinds: _p0._0._0}),
						_1: _user$project$Request_Room$loadDimmers
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'InitDimmers':
				if (_p0._0.ctor === 'Ok') {
					var newDimmers = A2(_elm_lang$core$List$map, _user$project$Data_Dimmer$fromJson, _p0._0._0);
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{dimmers: newDimmers}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var _p1 = A2(
						_elm_lang$core$Debug$log,
						'error',
						_elm_lang$core$Basics$toString(_p0._0._0));
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'Raise':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{raised: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'DimSlide':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							dimmers: A2(
								_user$project$Util$replaceListElem,
								model.dimmers,
								A2(_user$project$Data_Dimmer$setFill, _p0._0, _p0._1))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'DimToggle':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							dimmers: A2(
								_user$project$Util$replaceListElem,
								model.dimmers,
								_user$project$Data_Dimmer$toggle(_p0._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ToggleLight':
				var _p2 = _p0._0;
				var newDim = _elm_lang$core$Native_Utils.update(
					_p2,
					{
						lights: A2(
							_user$project$Util$replaceListElem,
							_p2.lights,
							_user$project$Data_Light$toggle(_p0._1))
					});
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						dimmers: A2(_user$project$Util$replaceListElem, model.dimmers, newDim)
					});
				return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UndrawDimmer':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							dimmers: A2(
								_user$project$Util$replaceListElem,
								model.dimmers,
								_user$project$Data_Dimmer$toggleUndrawn(_p0._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UndrawSunblinds':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{blindUndrawn: !model.blindUndrawn}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SetAllSunblinds':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							sunblinds: _user$project$Data_Sunblind$toggleList(model.sunblinds)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ToggleSunblind':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							sunblinds: A2(
								_user$project$Util$replaceListElem,
								model.sunblinds,
								_user$project$Data_Sunblind$toggle(_p0._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return A3(_debois$elm_mdl$Material$update, _user$project$Model$Mdl, _p0._0, model);
		}
	});
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$initBlindUndrawn = false;
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A5(
		_user$project$Model$Model,
		{ctor: '[]'},
		{ctor: '[]'},
		_user$project$Main$initBlindUndrawn,
		-1,
		_debois$elm_mdl$Material$model),
	_1: _user$project$Request_Room$loadSunblinds
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
