var _user$project$Request$refBody = F2(
	function (s, v) {
		var _p0 = s;
		if (_p0.ctor === 'Just') {
			return _elm_lang$http$Http$jsonBody(
				_elm_lang$core$Json_Encode$object(
					{
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'joinRef',
							_1: _elm_lang$core$Json_Encode$int(_p0._0)
						},
						_1: v
					}));
		} else {
			return _elm_lang$http$Http$emptyBody;
		}
	});
var _user$project$Request$delete = function (url) {
	return _elm_lang$http$Http$request(
		{
			method: 'DELETE',
			headers: {ctor: '[]'},
			url: url,
			body: _elm_lang$http$Http$emptyBody,
			expect: function (_p1) {
				return _elm_lang$http$Http$expectStringResponse(
					_elm_lang$core$Basics$always(_p1));
			}(
				_elm_lang$core$Result$Ok(
					{ctor: '_Tuple0'})),
			timeout: _elm_lang$core$Maybe$Nothing,
			withCredentials: false
		});
};
var _user$project$Request$put = F3(
	function (url, body, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'PUT',
				headers: {ctor: '[]'},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _user$project$Request$data = function (d) {
	return A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {ctor: '[]'}
		},
		d);
};
var _user$project$Request$post = F3(
	function (url, body, decoder) {
		return _elm_lang$http$Http$request(
			{
				method: 'POST',
				headers: {ctor: '[]'},
				url: url,
				body: body,
				expect: _elm_lang$http$Http$expectJson(decoder),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _user$project$Request$send2 = F3(
	function (msg, request1, request2) {
		return A2(
			_elm_lang$core$Task$attempt,
			msg,
			A3(
				_elm_lang$core$Task$map2,
				F2(
					function (resp1, resp2) {
						return {ctor: '_Tuple2', _0: resp1, _1: resp2};
					}),
				_elm_lang$http$Http$toTask(request1),
				_elm_lang$http$Http$toTask(request2)));
	});
var _user$project$Request$send = F2(
	function (msg, request) {
		return A2(_elm_lang$http$Http$send, msg, request);
	});
var _user$project$Request$url = 'http://0.0.0.0:4000/api/';
