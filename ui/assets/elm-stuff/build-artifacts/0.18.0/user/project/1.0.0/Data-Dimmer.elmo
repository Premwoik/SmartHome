var _user$project$Data_Dimmer$isOn = function (dim) {
	return function (_p0) {
		return A2(
			_elm_lang$core$List$any,
			function (_) {
				return _.state;
			},
			function (_) {
				return _.lights;
			}(_p0));
	}(dim) || (_elm_lang$core$Native_Utils.cmp(dim.fill, 0) > 0);
};
var _user$project$Data_Dimmer$Light = F3(
	function (a, b, c) {
		return {id: a, name: b, state: c};
	});
var _user$project$Data_Dimmer$lightDecoder = A4(
	_elm_lang$core$Json_Decode$map3,
	_user$project$Data_Dimmer$Light,
	A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'state', _elm_lang$core$Json_Decode$bool));
var _user$project$Data_Dimmer$Dimmer = F5(
	function (a, b, c, d, e) {
		return {id: a, name: b, fill: c, lights: d, dimmer_: e};
	});
var _user$project$Data_Dimmer$decoder = A6(
	_elm_lang$core$Json_Decode$map5,
	_user$project$Data_Dimmer$Dimmer,
	A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'fill', _elm_lang$core$Json_Decode$float),
	A2(
		_elm_lang$core$Json_Decode$field,
		'lights',
		_elm_lang$core$Json_Decode$list(_user$project$Data_Dimmer$lightDecoder)),
	A2(_elm_lang$core$Json_Decode$field, 'dimmer', _elm_lang$core$Json_Decode$string));
var _user$project$Data_Dimmer$setFill = F3(
	function (fill, sRef, d) {
		var data_ = {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'id',
				_1: _elm_lang$core$Json_Encode$int(d.id)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'fill',
					_1: _elm_lang$core$Json_Encode$int(
						_elm_lang$core$Basics$round(fill))
				},
				_1: {ctor: '[]'}
			}
		};
		var url_ = A2(_elm_lang$core$Basics_ops['++'], _user$project$Request$url, 'dimmers/setBrightness');
		return A3(
			_elm_lang$http$Http$post,
			url_,
			A2(_user$project$Request$refBody, sRef, data_),
			_user$project$Request$data(_user$project$Data_Dimmer$decoder));
	});
var _user$project$Data_Dimmer$setOn = F2(
	function (sRef, d) {
		var url_ = A2(
			_elm_lang$core$Basics_ops['++'],
			_user$project$Request$url,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'dimmers/setOn/',
				_elm_lang$core$Basics$toString(d.id)));
		return A3(
			_elm_lang$http$Http$post,
			url_,
			A2(
				_user$project$Request$refBody,
				sRef,
				{ctor: '[]'}),
			_user$project$Request$data(_user$project$Data_Dimmer$decoder));
	});
var _user$project$Data_Dimmer$setOff = F2(
	function (sRef, d) {
		var url_ = A2(
			_elm_lang$core$Basics_ops['++'],
			_user$project$Request$url,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'dimmers/setOff/',
				_elm_lang$core$Basics$toString(d.id)));
		return A3(
			_elm_lang$http$Http$post,
			url_,
			A2(
				_user$project$Request$refBody,
				sRef,
				{ctor: '[]'}),
			_user$project$Request$data(_user$project$Data_Dimmer$decoder));
	});
var _user$project$Data_Dimmer$toggle = F2(
	function (sRef, d) {
		return _user$project$Data_Dimmer$isOn(d) ? A2(_user$project$Data_Dimmer$setOff, sRef, d) : A2(_user$project$Data_Dimmer$setOn, sRef, d);
	});
var _user$project$Data_Dimmer$setLightOn = F2(
	function (sRef, l) {
		var url_ = A2(
			_elm_lang$core$Basics_ops['++'],
			_user$project$Request$url,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'dimmers/setLightOn/',
				_elm_lang$core$Basics$toString(l.id)));
		return A3(
			_elm_lang$http$Http$post,
			url_,
			A2(
				_user$project$Request$refBody,
				sRef,
				{ctor: '[]'}),
			_user$project$Request$data(_user$project$Data_Dimmer$decoder));
	});
var _user$project$Data_Dimmer$setLightOff = F2(
	function (sRef, l) {
		var url_ = A2(
			_elm_lang$core$Basics_ops['++'],
			_user$project$Request$url,
			A2(
				_elm_lang$core$Basics_ops['++'],
				'dimmers/setLightOff/',
				_elm_lang$core$Basics$toString(l.id)));
		return A3(
			_elm_lang$http$Http$post,
			url_,
			A2(
				_user$project$Request$refBody,
				sRef,
				{ctor: '[]'}),
			_user$project$Request$data(_user$project$Data_Dimmer$decoder));
	});
var _user$project$Data_Dimmer$toggleLight = F2(
	function (sRef, l) {
		return l.state ? A2(_user$project$Data_Dimmer$setLightOff, sRef, l) : A2(_user$project$Data_Dimmer$setLightOn, sRef, l);
	});
var _user$project$Data_Dimmer$getView = function (id) {
	var url_ = A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Request$url,
		A2(
			_elm_lang$core$Basics_ops['++'],
			'dimmers/cardView/',
			_elm_lang$core$Basics$toString(id)));
	return A2(
		_elm_lang$http$Http$get,
		url_,
		_user$project$Request$data(_user$project$Data_Dimmer$decoder));
};
var _user$project$Data_Dimmer$Down = {ctor: 'Down'};
var _user$project$Data_Dimmer$Up = {ctor: 'Up'};
var _user$project$Data_Dimmer$directionDecoder = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (dir) {
		var _p1 = dir;
		if (_p1 === true) {
			return _elm_lang$core$Json_Decode$succeed(_user$project$Data_Dimmer$Up);
		} else {
			return _elm_lang$core$Json_Decode$succeed(_user$project$Data_Dimmer$Down);
		}
	},
	_elm_lang$core$Json_Decode$bool);
