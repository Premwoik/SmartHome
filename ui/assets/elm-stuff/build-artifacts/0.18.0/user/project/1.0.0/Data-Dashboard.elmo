var _user$project$Data_Dashboard$DashboardShort = F3(
	function (a, b, c) {
		return {id: a, number: b, name: c};
	});
var _user$project$Data_Dashboard$decoderShort = A4(
	_elm_lang$core$Json_Decode$map3,
	_user$project$Data_Dashboard$DashboardShort,
	A2(_elm_lang$core$Json_Decode$field, 'id', _user$project$Data_Id$decoder),
	A2(_elm_lang$core$Json_Decode$field, 'number', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string));
var _user$project$Data_Dashboard$getTabs = function () {
	var decoder = _elm_lang$core$Json_Decode$list(_user$project$Data_Dashboard$decoderShort);
	var url_ = A2(_elm_lang$core$Basics_ops['++'], _user$project$Request$url, 'dashboards/view/short');
	return A2(
		_elm_lang$http$Http$get,
		url_,
		_user$project$Request$data(decoder));
}();
var _user$project$Data_Dashboard$ShortContent = F2(
	function (a, b) {
		return {type_: a, id: b};
	});
var _user$project$Data_Dashboard$makeShortContent = function (d) {
	var make = function (x) {
		var _p0 = x;
		switch (_p0.ctor) {
			case 'Dimmer':
				return A2(_user$project$Data_Dashboard$ShortContent, 'dimmer', _p0._0.id);
			case 'Light':
				return A2(_user$project$Data_Dashboard$ShortContent, 'light', _p0._0.id);
			case 'Action':
				return A2(_user$project$Data_Dashboard$ShortContent, 'action', _p0._0.id);
			case 'Task':
				return A2(_user$project$Data_Dashboard$ShortContent, 'task', _p0._0.id);
			case 'Port':
				return A2(_user$project$Data_Dashboard$ShortContent, 'port', _p0._0.id);
			default:
				return A2(_user$project$Data_Dashboard$ShortContent, 'sunblind', _p0._0.id);
		}
	};
	return _elm_lang$core$Native_Utils.update(
		d,
		{
			shortContent: A2(_elm_lang$core$List$map, make, d.content)
		});
};
var _user$project$Data_Dashboard$decodeUpdateNoti = function (raw) {
	var objDecoder = A3(
		_elm_lang$core$Json_Decode$map2,
		_user$project$Data_Dashboard$ShortContent,
		A2(_elm_lang$core$Json_Decode$field, 'type', _elm_lang$core$Json_Decode$string),
		A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int));
	var decoder = _elm_lang$core$Json_Decode$list(objDecoder);
	return A2(
		_elm_lang$core$Json_Decode$decodeValue,
		_user$project$Request$data(decoder),
		raw);
};
var _user$project$Data_Dashboard$Dashboard = F7(
	function (a, b, c, d, e, f, g) {
		return {id: a, number: b, name: c, title: d, description: e, content: f, shortContent: g};
	});
var _user$project$Data_Dashboard$empty = A7(
	_user$project$Data_Dashboard$Dashboard,
	_user$project$Data_Id$Id(-1),
	-1,
	'',
	'',
	'',
	{ctor: '[]'},
	{ctor: '[]'});
var _user$project$Data_Dashboard$UpdateNoti = F2(
	function (a, b) {
		return {id: a, type_: b};
	});
var _user$project$Data_Dashboard$Task = function (a) {
	return {ctor: 'Task', _0: a};
};
var _user$project$Data_Dashboard$Sunblind = function (a) {
	return {ctor: 'Sunblind', _0: a};
};
var _user$project$Data_Dashboard$Action = function (a) {
	return {ctor: 'Action', _0: a};
};
var _user$project$Data_Dashboard$Port = function (a) {
	return {ctor: 'Port', _0: a};
};
var _user$project$Data_Dashboard$Light = function (a) {
	return {ctor: 'Light', _0: a};
};
var _user$project$Data_Dashboard$Dimmer = function (a) {
	return {ctor: 'Dimmer', _0: a};
};
var _user$project$Data_Dashboard$decoderContent = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _user$project$Data_Dashboard$Dimmer, _user$project$Data_Dimmer$decoder),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _user$project$Data_Dashboard$Light, _user$project$Data_Light$decoder),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$Json_Decode$map, _user$project$Data_Dashboard$Sunblind, _user$project$Data_Sunblind$decoder),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$core$Json_Decode$map, _user$project$Data_Dashboard$Port, _user$project$Data_Port$decoder),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$core$Json_Decode$map, _user$project$Data_Dashboard$Action, _user$project$Data_Action$decoder),
						_1: {
							ctor: '::',
							_0: A2(_elm_lang$core$Json_Decode$map, _user$project$Data_Dashboard$Task, _user$project$Data_Task$decoder),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$Data_Dashboard$decoder = A2(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$hardcoded,
	{ctor: '[]'},
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'content',
		_elm_lang$core$Json_Decode$list(_user$project$Data_Dashboard$decoderContent),
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'description',
			_elm_lang$core$Json_Decode$string,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'title',
				_elm_lang$core$Json_Decode$string,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'name',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'order',
						_elm_lang$core$Json_Decode$int,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'id',
							_user$project$Data_Id$decoder,
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Data_Dashboard$Dashboard))))))));
var _user$project$Data_Dashboard$getDashboard = function (id) {
	var url_ = A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Request$url,
		A2(
			_elm_lang$core$Basics_ops['++'],
			'dashboards/view/',
			_elm_lang$core$Basics$toString(id)));
	return A2(
		_elm_lang$http$Http$get,
		url_,
		_user$project$Request$data(_user$project$Data_Dashboard$decoder));
};
var _user$project$Data_Dashboard$updateContent = F2(
	function (c, l) {
		var _p1 = c;
		switch (_p1.ctor) {
			case 'Dimmer':
				var _p4 = _p1._0;
				var f = function (x) {
					var _p2 = x;
					if (_p2.ctor === 'Dimmer') {
						var _p3 = _p2._0;
						return _elm_lang$core$Native_Utils.eq(_p4.id, _p3.id) ? _user$project$Data_Dashboard$Dimmer(_p4) : _user$project$Data_Dashboard$Dimmer(_p3);
					} else {
						return _p2;
					}
				};
				return A2(_elm_lang$core$List$map, f, l);
			case 'Light':
				var _p7 = _p1._0;
				var f = function (x) {
					var _p5 = x;
					if (_p5.ctor === 'Light') {
						var _p6 = _p5._0;
						return _elm_lang$core$Native_Utils.eq(_p7.id, _p6.id) ? _user$project$Data_Dashboard$Light(_p7) : _user$project$Data_Dashboard$Light(_p6);
					} else {
						return _p5;
					}
				};
				return A2(_elm_lang$core$List$map, f, l);
			case 'Port':
				var _p10 = _p1._0;
				var f = function (x) {
					var _p8 = x;
					if (_p8.ctor === 'Port') {
						var _p9 = _p8._0;
						return _elm_lang$core$Native_Utils.eq(_p10.id, _p9.id) ? _user$project$Data_Dashboard$Port(_p10) : _user$project$Data_Dashboard$Port(_p9);
					} else {
						return _p8;
					}
				};
				return A2(_elm_lang$core$List$map, f, l);
			case 'Action':
				var _p13 = _p1._0;
				var f = function (x) {
					var _p11 = x;
					if (_p11.ctor === 'Action') {
						var _p12 = _p11._0;
						return _elm_lang$core$Native_Utils.eq(_p13.id, _p12.id) ? _user$project$Data_Dashboard$Action(_p13) : _user$project$Data_Dashboard$Action(_p12);
					} else {
						return _p11;
					}
				};
				return A2(_elm_lang$core$List$map, f, l);
			case 'Sunblind':
				var _p16 = _p1._0;
				var f = function (x) {
					var _p14 = x;
					if (_p14.ctor === 'Sunblind') {
						var _p15 = _p14._0;
						return _elm_lang$core$Native_Utils.eq(_p16.id, _p15.id) ? _user$project$Data_Dashboard$Sunblind(_p16) : _user$project$Data_Dashboard$Sunblind(_p15);
					} else {
						return _p14;
					}
				};
				return A2(_elm_lang$core$List$map, f, l);
			default:
				var _p19 = _p1._0;
				var f = function (x) {
					var _p17 = x;
					if (_p17.ctor === 'Task') {
						var _p18 = _p17._0;
						return _elm_lang$core$Native_Utils.eq(_p19.id, _p18.id) ? _user$project$Data_Dashboard$Task(_p19) : _user$project$Data_Dashboard$Task(_p18);
					} else {
						return _p17;
					}
				};
				return A2(_elm_lang$core$List$map, f, l);
		}
	});
