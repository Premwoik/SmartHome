var _user$project$Admin_Dimmer$deleteDimmer = function (d) {
	var url_ = A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Request$url,
		A2(
			_elm_lang$core$Basics_ops['++'],
			'dimmers/',
			_elm_lang$core$Basics$toString(d)));
	return _user$project$Request$delete(url_);
};
var _user$project$Admin_Dimmer$encode = function (d) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'id',
				_1: _elm_lang$core$Json_Encode$int(d.id)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'fill',
					_1: _elm_lang$core$Json_Encode$int(d.fill)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'direction',
						_1: _elm_lang$core$Json_Encode$int(d.direction)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'time',
							_1: _elm_lang$core$Json_Encode$int(d.fullTime)
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'port',
								_1: _user$project$Admin_Port$encode(d.port_)
							},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Admin_Dimmer$Dimmer = F5(
	function (a, b, c, d, e) {
		return {id: a, fill: b, direction: c, fullTime: d, port_: e};
	});
var _user$project$Admin_Dimmer$empty = function () {
	var empty = _user$project$Admin_Port$empty;
	var port_ = _elm_lang$core$Native_Utils.update(
		empty,
		{type_: 'dimmer', mode: 'output'});
	return A5(_user$project$Admin_Dimmer$Dimmer, 0, 0, 0, 0, port_);
}();
var _user$project$Admin_Dimmer$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'port',
	_user$project$Admin_Port$decoder,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'full_time',
		_elm_lang$core$Json_Decode$int,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'direction',
			_elm_lang$core$Json_Decode$int,
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'fill',
				_elm_lang$core$Json_Decode$int,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'id',
					_elm_lang$core$Json_Decode$int,
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Admin_Dimmer$Dimmer))))));
var _user$project$Admin_Dimmer$getDimmers = function () {
	var decode = A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$list(_user$project$Admin_Dimmer$decoder));
	var url_ = A2(_elm_lang$core$Basics_ops['++'], _user$project$Request$url, 'dimmers');
	return A2(_elm_lang$http$Http$get, url_, decode);
}();
var _user$project$Admin_Dimmer$updateDimmer = function (d) {
	var body = _elm_lang$http$Http$jsonBody(
		_elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'dimmer',
					_1: _user$project$Admin_Dimmer$encode(d)
				},
				_1: {ctor: '[]'}
			}));
	var decode = A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {ctor: '[]'}
		},
		_user$project$Admin_Dimmer$decoder);
	var url_ = A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Request$url,
		A2(
			_elm_lang$core$Basics_ops['++'],
			'dimmers/',
			_elm_lang$core$Basics$toString(d.id)));
	return A3(_user$project$Request$put, url_, body, decode);
};
var _user$project$Admin_Dimmer$createDimmer = function (d) {
	var body = _elm_lang$http$Http$jsonBody(
		_elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'dimmer',
					_1: _user$project$Admin_Dimmer$encode(d)
				},
				_1: {ctor: '[]'}
			}));
	var decode = A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {ctor: '[]'}
		},
		_user$project$Admin_Dimmer$decoder);
	var url_ = A2(_elm_lang$core$Basics_ops['++'], _user$project$Request$url, 'dimmers/');
	return A3(_user$project$Request$post, url_, body, decode);
};
