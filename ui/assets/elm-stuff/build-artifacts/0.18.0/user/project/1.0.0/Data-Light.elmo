var _user$project$Data_Light$set = F2(
	function (light, state) {
		return _elm_lang$core$Native_Utils.update(
			light,
			{state: state});
	});
var _user$project$Data_Light$setList = F2(
	function (lights, state) {
		return A2(
			_elm_lang$core$List$map,
			function (x) {
				return _elm_lang$core$Native_Utils.update(
					x,
					{state: state});
			},
			lights);
	});
var _user$project$Data_Light$getId = function (sun) {
	return _user$project$Data_Id$toInt(sun.id);
};
var _user$project$Data_Light$Light = F3(
	function (a, b, c) {
		return {id: a, state: b, name: c};
	});
var _user$project$Data_Light$Off = {ctor: 'Off'};
var _user$project$Data_Light$setOffList = function (lights) {
	return A2(_user$project$Data_Light$setList, lights, _user$project$Data_Light$Off);
};
var _user$project$Data_Light$On = {ctor: 'On'};
var _user$project$Data_Light$notState = function (state) {
	var _p0 = state;
	if (_p0.ctor === 'On') {
		return _user$project$Data_Light$Off;
	} else {
		return _user$project$Data_Light$On;
	}
};
var _user$project$Data_Light$toggleList = function (lights) {
	var state = _user$project$Data_Light$notState(
		function (x) {
			var _p1 = x;
			if (_p1.ctor === 'Just') {
				return _p1._0.state;
			} else {
				return _user$project$Data_Light$Off;
			}
		}(
			_elm_lang$core$List$head(lights)));
	return A2(_user$project$Data_Light$setList, lights, state);
};
var _user$project$Data_Light$toggle = function (light) {
	return A2(
		_user$project$Data_Light$set,
		light,
		_user$project$Data_Light$notState(light.state));
};
var _user$project$Data_Light$stateDecoder = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (state) {
		var _p2 = state;
		if (_p2 === true) {
			return _elm_lang$core$Json_Decode$succeed(_user$project$Data_Light$On);
		} else {
			return _elm_lang$core$Json_Decode$succeed(_user$project$Data_Light$Off);
		}
	},
	_elm_lang$core$Json_Decode$bool);
var _user$project$Data_Light$decoder = A4(
	_elm_lang$core$Json_Decode$map3,
	_user$project$Data_Light$Light,
	A2(_elm_lang$core$Json_Decode$field, 'id', _user$project$Data_Id$decoder),
	A2(_elm_lang$core$Json_Decode$field, 'state', _user$project$Data_Light$stateDecoder),
	A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string));
var _user$project$Data_Light$isOn = function (light) {
	return _elm_lang$core$Native_Utils.eq(light.state, _user$project$Data_Light$On);
};
var _user$project$Data_Light$setOnList = function (lights) {
	return A2(_user$project$Data_Light$setList, lights, _user$project$Data_Light$On);
};
var _user$project$Data_Light$setOn = function (light) {
	return A2(_user$project$Data_Light$set, light, _user$project$Data_Light$On);
};
var _user$project$Data_Light$setOff = function (light) {
	return A2(_user$project$Data_Light$set, light, _user$project$Data_Light$On);
};
