var _user$project$Data_Light$Light = F4(
	function (a, b, c, d) {
		return {id: a, state: b, name: c, light_: d};
	});
var _user$project$Data_Light$decoder = A5(
	_elm_lang$core$Json_Decode$map4,
	_user$project$Data_Light$Light,
	A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'state', _elm_lang$core$Json_Decode$bool),
	A2(_elm_lang$core$Json_Decode$field, 'name', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'light', _elm_lang$core$Json_Decode$string));
var _user$project$Data_Light$setOn = function (l) {
	var url_ = A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Request$url,
		A2(
			_elm_lang$core$Basics_ops['++'],
			'lights/setOn/',
			_elm_lang$core$Basics$toString(l.id)));
	return A3(
		_elm_lang$http$Http$post,
		url_,
		_elm_lang$http$Http$emptyBody,
		A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'data',
				_1: {ctor: '[]'}
			},
			_user$project$Data_Light$decoder));
};
var _user$project$Data_Light$setOff = function (l) {
	var url_ = A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Request$url,
		A2(
			_elm_lang$core$Basics_ops['++'],
			'lights/setOff/',
			_elm_lang$core$Basics$toString(l.id)));
	return A3(
		_elm_lang$http$Http$post,
		url_,
		_elm_lang$http$Http$emptyBody,
		A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'data',
				_1: {ctor: '[]'}
			},
			_user$project$Data_Light$decoder));
};
var _user$project$Data_Light$toggle = function (l) {
	return l.state ? _user$project$Data_Light$setOff(l) : _user$project$Data_Light$setOn(l);
};
