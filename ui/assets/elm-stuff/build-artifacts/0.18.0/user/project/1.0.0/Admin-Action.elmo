var _user$project$Admin_Action$deleteAction = function (a) {
	var url_ = A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Request$url,
		A2(
			_elm_lang$core$Basics_ops['++'],
			'actions/',
			_elm_lang$core$Basics$toString(a)));
	return _user$project$Request$delete(url_);
};
var _user$project$Admin_Action$view = A2(
	_debois$elm_mdl$Material_Options$div,
	{ctor: '[]'},
	{ctor: '[]'});
var _user$project$Admin_Action$encode = function (a) {
	var optional = F2(
		function (e, v) {
			return function (_p0) {
				return A2(
					_elm_lang$core$Maybe$withDefault,
					_elm_lang$core$Json_Encode$null,
					A2(_elm_lang$core$Maybe$map, e, _p0));
			}(v);
		});
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'id',
				_1: _elm_lang$core$Json_Encode$int(a.id)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'name',
					_1: _elm_lang$core$Json_Encode$string(a.name)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'function',
						_1: _elm_lang$core$Json_Encode$string(a.$function)
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'active',
							_1: _elm_lang$core$Json_Encode$bool(a.active)
						},
						_1: {
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'params',
								_1: _elm_lang$core$Json_Encode$string(a.params)
							},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'frequency',
									_1: _elm_lang$core$Json_Encode$int(a.frequency)
								},
								_1: {
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'start_time',
										_1: A2(optional, _elm_lang$core$Json_Encode$string, a.startTime)
									},
									_1: {
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'end_time',
											_1: A2(optional, _elm_lang$core$Json_Encode$string, a.endTime)
										},
										_1: {
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'port_id',
												_1: A2(optional, _elm_lang$core$Json_Encode$int, a.portId)
											},
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Admin_Action$Action = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {id: a, name: b, $function: c, active: d, params: e, frequency: f, startTime: g, endTime: h, portId: i};
	});
var _user$project$Admin_Action$empty = A9(_user$project$Admin_Action$Action, 0, '', '', false, '{}', 1000, _elm_lang$core$Maybe$Nothing, _elm_lang$core$Maybe$Nothing, _elm_lang$core$Maybe$Nothing);
var _user$project$Admin_Action$decoder = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'port_id',
	_elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$int),
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'end_time',
		_elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$string),
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'start_time',
			_elm_lang$core$Json_Decode$nullable(_elm_lang$core$Json_Decode$string),
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'frequency',
				_elm_lang$core$Json_Decode$int,
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'params',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'active',
						_elm_lang$core$Json_Decode$bool,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'function',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'name',
								_elm_lang$core$Json_Decode$string,
								A3(
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
									'id',
									_elm_lang$core$Json_Decode$int,
									_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Admin_Action$Action))))))))));
var _user$project$Admin_Action$getActions = function () {
	var decode = A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {ctor: '[]'}
		},
		_elm_lang$core$Json_Decode$list(_user$project$Admin_Action$decoder));
	var url_ = A2(_elm_lang$core$Basics_ops['++'], _user$project$Request$url, 'actions');
	return A2(_elm_lang$http$Http$get, url_, decode);
}();
var _user$project$Admin_Action$updateAction = function (a) {
	var body = _elm_lang$http$Http$jsonBody(
		_elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'action',
					_1: _user$project$Admin_Action$encode(a)
				},
				_1: {ctor: '[]'}
			}));
	var decode = A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {ctor: '[]'}
		},
		_user$project$Admin_Action$decoder);
	var url_ = A2(
		_elm_lang$core$Basics_ops['++'],
		_user$project$Request$url,
		A2(
			_elm_lang$core$Basics_ops['++'],
			'actions/',
			_elm_lang$core$Basics$toString(a.id)));
	return A3(_user$project$Request$put, url_, body, decode);
};
var _user$project$Admin_Action$createAction = function (a) {
	var body = _elm_lang$http$Http$jsonBody(
		_elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'action',
					_1: _user$project$Admin_Action$encode(a)
				},
				_1: {ctor: '[]'}
			}));
	var decode = A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'data',
			_1: {ctor: '[]'}
		},
		_user$project$Admin_Action$decoder);
	var url_ = A2(_elm_lang$core$Basics_ops['++'], _user$project$Request$url, 'actions/');
	return A3(_user$project$Request$post, url_, body, decode);
};
